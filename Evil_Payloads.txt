
hxxps:// github.com/jmscory/Security-Tool-Chest

hxxps:// github.com/advanced-threat-research/Yara-Rules
hxxps:// github.com/advanced-threat-research/Yara-Rules/tree/master/APT
hxxps:// github.com/Neo23x0/signature-base/tree/master/yara

hxxps github.com/JPCERTCC/MalConfScan/blob/master/yara/rule.yara

------------------------------------------------------------
https://github.com/Neo23x0/signature-base/blob/master/yara/apt_cobaltstrike.yar

73 70 72 6E 67 00   APT_CobaltStrike_Beacon_Indicator 1
69 69 69 69 69 69 69 69    APT_CobaltStrike_Beacon_Indicator 2

https://github.com/Neo23x0/signature-base/blob/master/yara/apt_cobaltstrike_evasive.yar

8B 07 8B 57 04 83 C7 08 85 C0 75 2C   CobaltStrike_Sleep_Decoder_Indicator
69 68 69 68 69 6B ?? ?? 69 6B 69 68 69 6B ?? ?? 69 6A 69 6B 69 6D ?? ?? ?? ?? 69 6D 69 6B 69 6D ?? ?? ?? ?? 69 6C 69 68 69 6B ?? ?? 69 6F 69 68 69 6B ?? ?? 69 6E 69 6A 68 69    CobaltStrike_C2_Encoded_Config_Indicator
01 00 00 00 ?? ?? ?? ?? 01 00 00 00 ?? ?? ?? ?? 02 00 00 00 ?? ?? ?? ?? 02 00 00 00 ?? ?? ?? ?? 01 00 00 00 ?? ?? ?? ?? 01 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ?? 03 00 00 00 ?? ?? ?? ??    CobaltStrike_C2_Decoded_Config_Indicator

hxxps github.com/Te-k/cobaltstrike/blob/master/rules.yar

fc e8 ?? 00 00 00              Cobaltstrike_encrypted_beacon_x86 string 1
8b [1-3] 83 c? 04 [0-1] 8b [1-2] 31    Cobaltstrike_encrypted_beacon_x86 string 2
fc 48 83 e4 f0 eb 33 5d 8b 45 00 48 83 c5 04 8b   Cobaltstrike_encrypted_beacon_x86_64
%02d/%02d/%02d %02d:%02d:%02d    ascii   Cobaltstrike_beacon string 1
%s as %s\\%s: %d ascii    Cobaltstrike_beacon string 2
Started service %s on %s ascii  Cobaltstrike_beacon string 3
beacon.dll ascii    Cobaltstrike_beacon string 4
beacon.x64.dll ascii    Cobaltstrike_beacon string 5
ReflectiveLoader ascii    Cobaltstrike_beacon string 6
2e 2f 2e 2f 2e 2c ?? ?? 2e 2c 2e 2f     Cobaltstrike_beacon string 7
69 68 69 68 69 6b ?? ?? 69 6b 69 68     Cobaltstrike_beacon string 8
%s (admin) ascii    Cobaltstrike_beacon string 9
Updater.dll ascii    Cobaltstrike_beacon string 10
LibTomMath ascii    Cobaltstrike_beacon string 11
Content-Type: application/octet-stream ascii    Cobaltstrike_beacon string 12

https://github.com/Neo23x0/signature-base/blob/master/yara/crime_cobaltgang.yar

WriteLine("(new ActiveXObject('WScript.Shell')).Run('cmd /c c:/ ascii   CobaltStrike_CN_Group_BeaconDropper String 1
WriteLine("(new ActiveXObject('WScript.Shell')).Run('regsvr32 /s ascii   CobaltStrike_CN_Group_BeaconDropper String 2
sh.Run(env('cmd /c set > %temp% ascii   CobaltStrike_CN_Group_BeaconDropper String 3
sh.Run('regsvr32 /s /u /i: ascii   CobaltStrike_CN_Group_BeaconDropper String 4
.Get('Win32_ScheduledJob').Create('regsvr32 /s /u /i: ascii   CobaltStrike_CN_Group_BeaconDropper String 5
scrobj.dll','******** ascii   CobaltStrike_CN_Group_BeaconDropper String 6
f.WriteLine(\" tLnk=env('%tmp%/'+lnkName+'.lnk');\"); fullword ascii   CobaltStrike_CN_Group_BeaconDropper String 7
lnkName='office 365';  fullword ascii   CobaltStrike_CN_Group_BeaconDropper String 8
;sh=x('WScript.Shell'); ascii   CobaltStrike_CN_Group_BeaconDropper String 9

ServerSocket.EXE fullword wide    CobaltGang Malware String 1
Incorrect version of WS2_32.dll found fullword ascii    CobaltGang Malware String 2
Click 'Connect' to Connect to the Server.  'Disconnect' to disconnect from server. fullword wide    CobaltGang Malware String 3
Click 'Start' to start the Server.  'Stop' to Stop it. fullword wide    CobaltGang Malware String 4

0f 44 c2 eb 0a 31 c0 80 fa 20 0f 94 c0 01 c0 5d     CobaltGang Malware String 5
89 e5 53 8b 55 08 8b 4d 0c 8a 1c 01 88 1c 02 83     CobaltGang Malware String 6
89 e5 53 8b 55 08 8b 45 0c 8a 1c 0a 88 1c 08 83     CobaltGang Malware String 7

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_armitage.yar

\umeterpreter\u >" fullword ascii    Armitage component string 1
umsf\u> fullword ascii    Armitage component string 2

session.meterpreter_read fullword ascii    Armitage component string 3
sniffer_dump fullword ascii    Armitage component string 4
keyscan_dump fullword ascii    Armitage component string 5
MeterpreterSession.java fullword ascii    Armitage component string 6

resources/covertvpn-injector.exe fullword ascii    Armitage component string 7
resources/browserpivot.x64.dll fullword ascii    Armitage component string 8
resources/msfrpcd_new.bat fullword ascii    Armitage component string 9

https://github.com/cuckoosandbox/community/blob/master/data/yara/shellcode/metasploit.yar

fc e8 8? 00 00 00 60    Metasploit Shellcode prologue


https://github.com/Neo23x0/signature-base/blob/master/yara/gen_invoke_psimage.yar

IEX([System.Text.Encoding]::ASCII.GetString(" ascii wide
System.Drawing.Bitmap((a Net.WebClient).OpenRead(" ascii wide
89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52 00 00 04 E4 00 00 03 A0 08 06 00 00 00 9D AF A9 E8 00 00 00 09 70 48 59 73 00 00 19 D6 00 00 19 D6 01 18 D1 CA ED 00 00 00 07 74 49 4D 45 07 E1 0C 0F 13 1E 36 89 C4 28 BF 00 00 00 07 74 45 58 74 41 75 74 68 6F 72 00 A9 AE CC 48 00 00 00 0C 74 45 58 74 44 65 73 63 72 69 70 74 69 6F 6E 00 13 09 21 23 00 00 00 0A 74 45 58 74 43 6F 70 79 72 69 67 68 74 00 AC 0F CC 3A 00 00 00 0E 74 45 58 74 43 72 65 61 74 69 6F 6E 20 74 69 6D 65 00 35 F7 0F

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_empire.yar

$ProcessInfo.Arguments=\"-nop -c $DownloadCradle\" fullword ascii   Empire_Invoke_MetasploitPayload String 1
$PowershellExe=$env:windir+'\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe' fullword ascii   Empire_Invoke_MetasploitPayload String 2

$postdata=\"script=println+new+ProcessBuilder%28%27\"+$($Cmd)+\" ascii    Empire_Exploit_Jenkins String 1
$url = \"http://\"+$($Rhost)+\":\"+$($Port)+\"/script\" fullword ascii    Empire_Exploit_Jenkins String 2
$Cmd = [System.Web.HttpUtility]::UrlEncode($Cmd) fullword ascii    Empire_Exploit_Jenkins String 3

$null = $EnumBuilder.DefineLiteral('LOGON', 0x2000) fullword ascii    Empire_Get_SecurityPackages String 1
$EnumBuilder = $ModuleBuilder.DefineEnum('SSPI.SECPKG_FLAG', 'Public', [Int32]) fullword ascii    Empire_Get_SecurityPackages String 2

$enc = Get-PostHashdumpScript fullword ascii    Empire_Invoke_PowerDump String 1
$lmhash = DecryptSingleHash $rid $hbootkey $enc_lm_hash $almpassword; fullword ascii    Empire_Invoke_PowerDump String 2
$rc4_key = $md5.ComputeHash($hbootkey[0..0x0f] + [BitConverter]::GetBytes($rid) + $lmntstr); fullword ascii    Empire_Invoke_PowerDump String 3

Install-SSP -Path .\\mimilib.dll fullword ascii   Empire_Install_SSP

$FinalShellcode.Length fullword ascii   Empire_Invoke_ShellcodeMSIL String 1
@(0x60,0xE8,0x04,0,0,0,0x61,0x31,0xC0,0xC3) fullword ascii   Empire_Invoke_ShellcodeMSIL String 2
@(0x41,0x54,0x41,0x55,0x41,0x56,0x41,0x57, fullword ascii   Empire_Invoke_ShellcodeMSIL String 3
$TargetMethod.Invoke($null, @(0x11112222)) | Out-Null fullword ascii   Empire_Invoke_ShellcodeMSIL String 4

$PoolPasswordCmd = 'c:\\windows\\system32\\inetsrv\\appcmd.exe list apppool fullword ascii    HKTL_Empire_PowerUp

= \"TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQ ascii   Empire_Invoke_Mimikatz_Gen String 1
Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes64, $PEBytes32, \"Void\", 0, \"\", $ExeArgs) fullword ascii   Empire_Invoke_Mimikatz_Gen String 2

$Base64Decoded = [Convert]::FromBase64String($Cpassword) fullword ascii   Empire_Get_GPPPassword String 1
$XMlFiles += Get-ChildItem -Path \"\\\\$DomainController\\SYSVOL\" -Recurse ascii   Empire_Get_GPPPassword String 2
function Get-DecryptedCpassword { fullword ascii   Empire_Get_GPPPassword String 3

$up = Test-Connection -count 1 -Quiet -ComputerName $Computer fullword ascii    Empire_Invoke_SmbScanner String 1
$out | add-member Noteproperty 'Password' $Password fullword ascii    Empire_Invoke_SmbScanner String 2

Exploit-JBoss fullword ascii    Empire_Exploit_JBoss String 1
$URL = \"http$($SSL)://\" + $($Rhost) + ':' + $($Port) ascii    Empire_Exploit_JBoss String 2
\"/jmx-console/HtmlAdaptor?action=invokeOp&name=jboss.system:service ascii    Empire_Exploit_JBoss String 3
http://blog.rvrsh3ll.net fullword ascii    Empire_Exploit_JBoss String 4
Remote URL to your own WARFile to deploy. fullword ascii    Empire_Exploit_JBoss String 5

[DllImport(\"Advapi32.dll\", SetLastError = true, EntryPoint = \"CredReadW\" ascii    Empire_dumpCredStore String 1
[String] $Msg = \"Failed to enumerate credentials store for user '$Env:UserName'\" fullword ascii    Empire_dumpCredStore String 2
Rtn = CredRead(\"Target\", CRED_TYPE.GENERIC, out Cred); fullword ascii    Empire_dumpCredStore String 3

egress -ip $ip -port $c -delay $delay -protocol $protocol fullword ascii    Empire_Invoke_EgressCheck

PowerShellRunner.pdb" fullword ascii    Empire_ReflectivePick_x64_orig String 1
PowerShellRunner.dll" fullword wide    Empire_ReflectivePick_x64_orig String
ReflectivePick_x64.dll" fullword ascii    Empire_ReflectivePick_x64_orig String

$Result = $MiniDumpWriteDump.Invoke($null, @($ProcessHandle, fullword ascii   Empire_Out_Minidump String 1
$ProcessFileName = \"$($ProcessName)_$($ProcessId).dmp\" fullword ascii   Empire_Out_Minidump String 2

Invoke-PsExecCmd fullword ascii   Empire_Invoke_PsExec String 1
\"[*] Executing service .EXE fullword ascii   Empire_Invoke_PsExec String 2
$cmd = \"%COMSPEC% /C echo $Command ^> %systemroot%\\Temp\\ ascii   Empire_Invoke_PsExec String 3

# upload to a specified exfil URI fullword ascii    Empire_Invoke_PostExfil String 1
Server path to exfil to. fullword ascii    Empire_Invoke_PostExfil String 2

[*] PDC: LAB-2008-DC1.lab.com fullword ascii    Empire_Invoke_SMBAutoBrute String 1
$attempts = Get-UserBadPwdCount $userid $dcs fullword ascii   Empire_Invoke_SMBAutoBrute String 2

$RightMouse   = ($ImportDll::GetAsyncKeyState([Windows.Forms.Keys]::RButton) -band 0x8000) -eq 0x8000 fullword ascii    Empire_Get_Keystrokes
-Dll evil.dll fullword ascii    Empire_Invoke_DllInjection
$UserMasterKeyFiles = @(, $(Get-ChildItem -Path $UserMasterKeyFolder -Force | Select-Object -ExpandProperty FullName) ) fullword ascii    Empire_KeePassConfig

$Base64 = 'TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAA ascii    Empire_Invoke_SSHCommand String 1
Invoke-SSHCommand -ip 192.168.1.100 -Username root -Password test -Command \"id\" fullword ascii    Empire_Invoke_SSHCommand String 2
Write-Verbose \"[*] Error loading dll\" fullword ascii    Empire_Invoke_SSHCommand String 3

Write-BytesToMemory -Bytes $Shellcode ascii   Empire_PowerShell_Framework_Gen1 String 1
$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length) fullword ascii   Empire_PowerShell_Framework_Gen1 String 2

$Result = sc.exe config $($TargetService.Name) binPath= $OriginalPath fullword ascii    Empire_PowerUp_Gen String 1
$Result = sc.exe pause $($TargetService.Name) fullword ascii    Empire_PowerUp_Gen String 2

$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)" fullword ascii   Empire_PowerShell_Framework_Gen2  String 1
#Shellcode: CallDllMain.asm" fullword ascii   Empire_PowerShell_Framework_Gen2 String 2

$wc.Headers.Add(\"User-Agent\",$script:UserAgent) fullword ascii    Empire_Agent_Gen String 1
$min = [int]((1-$script:AgentJitter)*$script:AgentDelay) fullword ascii   Empire_Agent_Gen String 2
if ($script:AgentDelay -ne 0){ fullword ascii   Empire_Agent_Gen String 3

if (($PEInfo.FileType -ieq \"DLL\") -and ($RemoteProcHandle -eq [IntPtr]::Zero)) fullword ascii   Empire_PowerShell_Framework_Gen3 String 1
remote DLL injection ascii    Empire_PowerShell_Framework_Gen3 String 2

$inveigh.SMBRelay_failed_list.Add(\"$HTTP_NTLM_domain_string\\$HTTP_NTLM_user_string $SMBRelayTarget\") fullword ascii    Empire_Invoke_InveighRelay_Gen String 1
$NTLM_challenge_base64 = [System.Convert]::ToBase64String($HTTP_NTLM_bytes) fullword ascii    Empire_Invoke_InveighRelay_Gen String 2

$KeePassXML = [xml](Get-Content -Path $KeePassXMLPath) fullword ascii   Empire_KeePassConfig_Gen

Test-Port -h $h -p $Port -timeout $Timeout fullword ascii   Empire_Invoke_Portscan_Gen String 1
1 {$nHosts=10;  $Threads = 32;   $Timeout = 5000 } fullword ascii   Empire_Invoke_Portscan_Gen String 2

Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\\\')[-1].Equals('System.dll') } fullword ascii    Empire_PowerShell_Framework_Gen4 String 1
# Get a handle to the module specified fullword ascii   Empire_PowerShell_Framework_Gen4 String 2
$Kern32Handle = $GetModuleHandle.Invoke($null, @($Module)) fullword ascii   Empire_PowerShell_Framework_Gen4 String 3
$DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate') fullword ascii    Empire_PowerShell_Framework_Gen4 String 4

$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -ExeArgs $ExeArgs -RemoteProcHandle $RemoteProcHandle fullword ascii   Empire_Invoke_CredentialInjection_Invoke_Mimikatz_Gen 1
$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -ExeArgs $ExeArgs" fullword ascii    Empire_Invoke_CredentialInjection_Invoke_Mimikatz_Gen 2

$Shellcode1 += 0x48 fullword ascii    Empire_Invoke_Gen String 1
$PEHandle = [IntPtr]::Zero fullword ascii   Empire_Invoke_Gen String 2

if ($ExeArgs -ne $null -and $ExeArgs -ne '') fullword ascii   Empire_PowerShell_Framework_Gen5 String 1
$ExeArgs = \"ReflectiveExe $ExeArgs\" fullword ascii    Empire_PowerShell_Framework_Gen5 String 2

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_powershell_empire.yar

$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory fullword ascii    Empire_Invoke_BypassUAC 1
$proc = Start-Process -WindowStyle Hidden notepad.exe -PassThru fullword ascii    Empire_Invoke_BypassUAC 2
$Payload = Invoke-PatchDll -DllBytes $Payload -FindString "ExitThread" -ReplaceString "ExitProcess" fullword ascii    Empire_Invoke_BypassUAC 3
$temp = [System.Text.Encoding]::UNICODE.GetBytes($szTempDllPath) fullword ascii     Empire_Invoke_BypassUAC 4

script += " -" + str(option) + " "" + str(values['Value'].strip(""")) + "" fullword ascii   Empire_TrollSploit 1
if option.lower() != "agent" and option.lower() != "computername": fullword ascii    Empire_TrollSploit 2
[String] $Title = 'ERROR - 0xA801B720' fullword ascii    Empire_TrollSploit 3
'Value'         :   'Lost contact with the Domain Controller.' fullword ascii   Empire_TrollSploit 4

C:\PS>Add-Persistence -ScriptBlock $RickRoll -ElevatedPersistenceOption $ElevatedOptions -UserPersistenceOption $UserOptions -V ascii   Empire_Persistence 1
# Execute the following to remove the user-level persistent payload fullword ascii    Empire_Persistence 2
$PersistantScript = $PersistantScript.ToString().Replace('EXECUTEFUNCTION', "$PersistenceScriptName -Persist") fullword ascii   Empire_Persistence 3

script += "Invoke-PortScan -noProgressMeter -f" fullword ascii    Empire_Portscan 1
script += " | ? {$_.alive}| Select-Object HostName,@{name='OpenPorts';expression={$_.openPorts -join ','}} | ft -wrap | Out-Str ascii     Empire_Portscan 2

C:\PS> Invoke-Shellcode -ProcessId $Proc.Id -Payload windows/meterpreter/reverse_https ascii    Empire_Invoke_Shellcode 1
Injecting shellcode injecting into $((Get-Process -Id $ProcessId).ProcessName) ($ProcessId)! fullword ascii   Empire_Invoke_Shellcode 2
$RemoteMemAddr = $VirtualAllocEx.Invoke($hProcess, [IntPtr]::Zero, $Shellcode.Length + 1, 0x3000, 0x40) # (Reserve|Commit, RWX) fullword ascii   Empire_Invoke_Shellcode 3

$PEBytes64 = "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAA4fug4AtAnNIbgBTM0hVGhpcyBwc ascii     Empire_Invoke_Mimikatz 1
[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false) fullword ascii      Empire_Invoke_Mimikatz 2
Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp fullword ascii      Empire_Invoke_Mimikatz 3

(credID, credType, domainName, userName, password, host, sid, notes) = self.mainMenu.credentials.get_credentials(credID)[0] fullword ascii     Empire_Lib_Creds_Mimikatz 1
command = "sekurlsa::pth /user:"+self.options["user"]['Value'] fullword ascii      Empire_Lib_Creds_Mimikatz 2

$DllBytes = Invoke-PatchDll -DllBytes $DllBytes -FindString "debug.bat" -ReplaceString $BatchPath fullword ascii    Empire_Write_HijackDll 1
$DllBytes32 = "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAA4fug4AtAnNIbgBTM0hVGhpcyBw ascii     Empire_Write_HijackDll 2
[Byte[]]$DllBytes = [Byte[]][Convert]::FromBase64String($DllBytes32) fullword ascii     Empire_Write_HijackDll 3

script += "Invoke-Mimikatz -Command ' fullword ascii    Empire_skeleton_key 1
script += '"Skeleton key implanted. Use password 'mimikatz' for access."' fullword ascii    Empire_skeleton_key 2
command = "misc::skeleton" fullword ascii     Empire_skeleton_key 3
ONLY APPLICABLE ON DOMAIN CONTROLLERS! fullword ascii     Empire_skeleton_key 4

ConvertTo-SecureString -asPlainText -Force;$Credential = New-Object System.Man" ascii   Empire_Invoke_WMI


https://github.com/Neo23x0/signature-base/blob/master/yara/gen_mimikatz.yar

sekurlsa::msv fullword ascii    Mimikatz_MemoryRule_1 String 1
sekurlsa::wdigest fullword ascii    Mimikatz_MemoryRule_1 String 2
sekurlsa::kerberos fullword ascii    Mimikatz_MemoryRule_1 String 3
sekurlsa::tspkg fullword ascii    Mimikatz_MemoryRule_1 String 4
sekurlsa::livessp fullword ascii    Mimikatz_MemoryRule_1 String 5
sekurlsa::ssp fullword ascii    Mimikatz_MemoryRule_1 String 6
sekurlsa::logonPasswords fullword ascii    Mimikatz_MemoryRule_1 String 7
sekurlsa::process fullword ascii    Mimikatz_MemoryRule_1 String 8
sekurlsa::minidump fullword ascii    Mimikatz_MemoryRule_1 String 9
sekurlsa::pth fullword ascii    Mimikatz_MemoryRule_1 String 10
sekurlsa::tickets fullword ascii    Mimikatz_MemoryRule_1 String 11
sekurlsa::ekeys fullword ascii    Mimikatz_MemoryRule_1 String 12
sekurlsa::dpapi fullword ascii    Mimikatz_MemoryRule_1 String 13
sekurlsa::credman fullword ascii    Mimikatz_MemoryRule_1 String 14

sekurlsa:: ascii    Mimikatz_MemoryRule_2 String 1
cryptprimitives.pdb ascii    Mimikatz_MemoryRule_2 String 2
Now is t1O ascii fullword    Mimikatz_MemoryRule_2 String 3
ALICE123 ascii    Mimikatz_MemoryRule_2 String 4
BOBBY456 ascii    Mimikatz_MemoryRule_2 String 5

89 71 04 89 [0-3] 30 8d 04 bd   Mimikatz_exe_x86 String 1
8b 4d e? 8b 45 f4 89 75 e? 89 01 85 ff 74   Mimikatz_exe_x86 String 2
33 ff 4? 89 37 4? 8b f3 45 85 c? 74   Mimikatz_exe_x64 String 1
4c 8b df 49 [0-3] c1 e3 04 48 [0-3] 8b cb 4c 03 [0-3] d8   Mimikatz_exe_x64 String 2
a0 00 00 00 24 02 00 00 40 00 00 00 [0-4] b8 00 00 00 6c 02 00 00 40 00 00 00   Mimikatz_Sys_x86
88 01 00 00 3c 04 00 00 40 00 00 00 [0-4] e8 02 00 00 f8 02 00 00 40 00 00 00   Mimikatz_exe_x64

8b ff 55 8b ec 6a 00 ff 75 0c ff 75 08 e8 [0-3] 5d c2 08 00    Mimikatz_wce_legacy
8d 45 f0 50 8d 45 f8 50 8d 45 e8 50 6a 00 8d 45 fc 50 [0-8] 50 72 69 6d 61 72 79 00   Mimikatz_wce_x86
ff f3 48 83 ec 30 48 8b d9 48 8d 15 [0-16] 50 72 69 6d 61 72 79 00  Mimikatz_wce_x64

0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9    Mimikatz with Powershell PE Reflective injection

SID               : ascii fullword    Mimikatz_logfile_old String 1
* NTLM     : ascii fullword    Mimikatz_logfile_old String 2
Authentication Id : ascii fullword    Mimikatz_logfile_old String 3
wdigest : ascii fullword    Mimikatz_logfile_old String

sekurlsa::logonpasswords fullword wide ascii    Mimikatz_generic_string 1
List tickets in MIT/Heimdall ccache fullword ascii wide    Mimikatz_generic_string 2
kuhl_m_kerberos_ptt_file ; LsaCallKerberosPackage %08x fullword ascii wide    Mimikatz_generic_string 3
* Injecting ticket : fullword wide ascii    Mimikatz_generic_string 4
mimidrv.sys fullword wide ascii    Mimikatz_generic_string 5
Lists LM & NTLM credentials fullword wide ascii    Mimikatz_generic_string 6
\_ kerberos - fullword wide ascii    Mimikatz_generic_string 7
* unknow   : fullword wide ascii    Mimikatz_generic_string 8
\_ *Password replace -> fullword wide ascii    Mimikatz_generic_string 9
KIWI_MSV1_0_PRIMARY_CREDENTIALS KO ascii wide    Mimikatz_generic_string 10
\\.\mimidrv wide ascii    Mimikatz_generic_string 11
Switch to MINIDUMP : fullword wide ascii    Mimikatz_generic_string 12
[masterkey] with password: %s (%s user) fullword wide    Mimikatz_generic_string 13
Clear screen (doesn't work with redirections, like PsExec) fullword wide    Mimikatz_generic_string 14
** Session key is NULL! It means allowtgtsessionkey is not set to 1 ** fullword wide    Mimikatz_generic_string 15
[masterkey] with DPAPI_SYSTEM (machine, then user): fullword wide    Mimikatz_generic_string 16

\Release\AppInitHook.pdb" ascii    Mimikatz_Apihook String 1
AppInitHook.dll" fullword ascii    Mimikatz_Apihook String 2
mimikatz.exe" fullword wide    Mimikatz_Apihook String 3
]X86Instruction->OperandSize >= Operand->Length" fullword wide    Mimikatz_Apihook String 4
mhook\disasm-lib\disasm.c fullword wide    Mimikatz_Apihook String 5
mhook\disasm-lib\disasm_x86.c fullword wide    Mimikatz_Apihook String 6
VoidFunc fullword ascii    Mimikatz_Apihook String 7

60 ba 4f ca c7 44 24 34 dc 46 6c 7a c7 44 24 38 03 3c 17 81 c7 44 24 3c 94 c0 3d f6   Mimikatz_SkeletonKey

48 81 EC A8 00 00 00 C7 84 24 88 00 00 00 ?? ?? ?? ?? C7 84 24 8C 00 00 00 ?? ?? ?? ?? C7 84 24 90 00 00 00 ?? ?? ?? 00 C7 84 24 80 00 00 00 61 00 00 00 C7 44 24 40 5B 00 25 00 C7 44 24 44 30 00 38 00 C7 44 24 48 78 00 3A 00 C7 44 24 4C 25 00 30 00 C7 44 24 50 38 00 78 00 C7 44 24 54 5D 00 20 00 C7 44 24 58 25 00 77 00 C7 44 24 5C 5A 00 5C 00 C7 44 24 60 25 00 77 00 C7 44 24 64 5A 00 09 00 C7 44 24 68 25 00 77 00 C7 44 24 6C 5A 00 0A 00 C7 44 24 70 00 00 00 00 48 8D 94 24 80 00 00 00 48 8D 8
24 88 00 00 00 48 B8 A0 7D ?? ?? ?? ?? 00 00 FF D0    Mimikatz_memssp_hookfn

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_invoke_mimikatz.yar

TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAEAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm ascii    Mimikatz_InvokeMimikatz 1
Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp fullword ascii    Mimikatz_InvokeMimikatz 2

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_kirbi_mimkatz.yar

76 82 ?? ?? 30 82 ?? ?? a0 03 02 01 05 a1 03 02 01 16   Mimikatz_Kirbi_Ticket 1
76 84 ?? ?? ?? ?? 30 84 ?? ?? ?? ?? a0 84 00 00 00 03 02 01 05 a1 84 00 00 00 03 02 01 16   Mimikatz_Kirbi_Ticket 2

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_metasploit_payloads.yar

0c 8b 52 14 8b 72 28 0f b7 4a 26 31 ff ac 3c 61   Metasploit_MsfPayload 1
01 c7 38 e0 75 f6 03 7d f8 3b 7d 24 75 e4 58 8b   Metasploit_MsfPayload 2
01 d0 89 44 24 24 5b 5b 61 59 5a 51 ff e0 5f 5f   Metasploit_MsfPayload 3

6D 65 74 73 72 76 2E 64 6C 6C 00 00 52 65 66 6C 65 63 74 69 76 65 4C 6F 61 64 65 72   Metasploit_Meterpreter_InMemory 1
metsrv.x64.dll ascii fullword   Metasploit_Meterpreter_InMemory 2
WS2_32.dll ascii fullword   Metasploit_Meterpreter_InMemory 3
ReflectiveLoader ascii fullword   Metasploit_Meterpreter_InMemory 4

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_p0wnshell.yar

Now if we point Firefox to http://127.0.0.1 fullword ascii    P0wnShell String 1
powercat -l -v -p fullword ascii    P0wnShell String 2
P0wnedListener fullword ascii    P0wnShell String 3
EncodedPayload.bat fullword ascii    P0wnShell String 4
powercat -c fullword ascii    P0wnShell String 5
Program.P0wnedPath() ascii    P0wnShell String 6
Invoke-PowerShellTcpOneLine fullword ascii    P0wnShell String 7
Invoke-TokenManipulation fullword ascii    P0wnShell String 8
windows/meterpreter fullword ascii    P0wnShell String 9
lsadump::dcsync fullword ascii    P0wnShell String 10
p0wnedShellx86 fullword ascii    P0wnShell String 11
p0wnedShellx64 fullword ascii    P0wnShell String 12
Invoke_PsExec() fullword ascii    P0wnShell String 13
Invoke-Mimikatz fullword ascii    P0wnShell String 14
Invoke_Shellcode() fullword ascii    P0wnShell String 15
Invoke-ReflectivePEInjection ascii    P0wnShell String 16
Invoke-Tater fullword ascii    P0wnShell String 17
P0wnedListener.Execute(WPAD_Proxy); fullword ascii    P0wnShell String 18
-SpooferIP ascii    P0wnShell String 19
TaterCommand() ascii    P0wnShell String 20
Pshell.RunPSCommand(Whoami); fullword ascii    P0wnShell String 21
If succeeded this exploit should popup a System CMD Shell fullword ascii    P0wnShell String 22
Oq02AB+LCAAAAAAABADs/QkW3LiOLQBuRUsQR1H731gHMQOkFGFnvvrdp/O4sp6tkDiAIIjhAryu4z6PVOtxHuXz3/xT6X9za/Df/Hsa/JT/9Pjgb/+kPPhv9Sjp01Wf wide    P0wnShell String 23
Invoke-TokenManipulation wide    P0wnShell String 24
-CreateProcess "cmd.exe" -Username "nt authority\system" fullword wide    P0wnShell String 25
CommandShell with Local Administrator privileges :) fullword wide    P0wnShell String 26
Invoke-shellcode -Payload windows/meterpreter/reverse_https -Lhost fullword wide    P0wnShell String 27
Invoke_ReflectivePEInjection fullword wide    P0wnShell String 28
p0wnedShell> fullword wide    P0wnShell String 29
Resources.Get_PassHashes fullword wide    P0wnShell String 30
Invoke_CredentialsPhish fullword wide    P0wnShell String 31
Invoke_Shellcode fullword wide    P0wnShell String 32
Resources.Invoke_TokenManipulation fullword wide    P0wnShell String 33
Resources.Port_Scan fullword wide    P0wnShell String 34
Invoke_PowerUp fullword wide    P0wnShell String 35
Oq02AB+LCAAAAAAABADs/QkW3LiOLQBuRUsQR1H731gHMQOkFGFnvvrdp/O4sp6tkDiAIIjhAryu4z6PVOtxHuXz3/xT6X9za/Df/Hsa/JT/9 ascii    P0wnShell String 36
wpoWAB+LCAAAAAAABADs/QeyK7uOBYhORUNIenL+E2vBA0ympH3erY4f8Tte3TpbUiY9YRbcGK91vVKtr+tV3v/B/yr/m1vD/+DvNOVb+V/f ascii    P0wnShell String 37
mo0MAB+LCAAAAAAABADsXQl24zqu3YqXII6i9r+xJ4AACU4SZcuJnVenf/9OxbHEAcRwcQGu62NbHsrax/Iw+3/hP5b+VzuH/4WfVeDf8n98 ascii    P0wnShell String 38
LE4CAB+LCAAAAAAABADsfQmW2zqu6Fa8BM7D/jf2hRmkKNuVm/Tt9zunkipb4giCIGb2/prhFUt5hVe+/sNP4b+pVvwPn+OQp/LT9ge/+ ascii    P0wnShell String 39
XpMCAB+LCAAAAAAABADsfQeWIzmO6FV0hKAn73+xL3iAwVAqq2t35r/tl53VyhCDFoQ3Y7zW9Uq1vq5Xef/CT+X/59bwFz6nKU/lp+8P/ ascii    P0wnShell String 40
STwAAB+LCAAAAAAABADtWwmy6yoO3YqXgJjZ/8ZaRwNgx/HNfX/o7qqUkxgzCM0SmLR2jHBQzkc4En9xZbvHUuSLMnWv9ateK/70ilStR ascii    P0wnShell String 41
namespace p0wnedShell fullword ascii    P0wnShell String 42
Program.P0wnedPath() fullword ascii    P0wnShell String 43
namespace p0wnedShell fullword ascii    P0wnShell String 44
H4sIAAAAAAAEAO1YfXRUx3WflXalFazQgiVb5nMVryzxIbGrt/rcFRZIa1CQYEFCQnxotUhP2pX3Q337HpYotCKrPdbmoQQnkOY0+BQCNKRpe ascii    P0wnShell String 45
[+] For this attack to succeed, you need to have Admin privileges. fullword ascii    P0wnShell String 46
[+] This is not a valid hostname, please try again fullword ascii    P0wnShell String 47
[+] First return the name of our current domain. fullword ascii    P0wnShell String 48

https://github.com/Neo23x0/signature-base/blob/master/yara/gen_powerkatz.yar

%3u - Directory '%s' (*.kirbi) fullword wide    P0werKatz 1
%*s  pPublicKey         : fullword wide    P0werKatz 2
<3 eo.oe ~ ANSSI E> fullword wide    P0werKatz 3
\*.kirbi fullword wide    P0werKatz 4
kuhl_m_lsadump_getUsersAndSamKey ; kull_m_registry_RegOpenKeyEx SAM Accounts (0x%08x) fullword wide    P0werKatz 5
kuhl_m_lsadump_getComputerAndSyskey ; kuhl_m_lsadump_getSyskey KO fullword wide    P0werKatz 6


https://github.com/Neo23x0/signature-base/blob/master/yara/apt_solarwinds_sunburst.yar

U4qpjjbQtUzUTdONrTY2q42pVapRgooABYxQuIZmtUoA wide    APT_Backdoor_SUNBURST Type 1 String 1
5C 7B 5B 30 2D 39 61 2D 66 2D 5D 7B 33 36 7D 5C 7D 22 7C 22 5B 30 2D 39 61 2D 66 5D 7B 33 32 7D 22 7C 22 5B 30 2D 39 61 2D 66 5D 7B 31 36 7D    APT_Backdoor_SUNBURST Type 1 String 2
U3ItS80rCaksSFWyUvIvyszPU9IBAA== wide    APT_Backdoor_SUNBURST Type 1 String 3
22 45 76 65 6E 74 54 79 70 65 22 3A 22 4F 72 69 6F 6E 22 2C    APT_Backdoor_SUNBURST Type 1 String 4
U3ItS80r8UvMTVWyUgKzfRPzEtNTi5R0AA== wide    APT_Backdoor_SUNBURST Type 1 String 5
22 45 76 65 6E 74 4E 61 6D 65 22 3A 22 45 76 65 6E 74 4D 61 6E 61 67 65 72 22 2C     APT_Backdoor_SUNBURST Type 1 String 6
U/JNLS5OTE9VslKqNqhVAgA= wide    APT_Backdoor_SUNBURST Type 1 String 7
22 4D 65 73 73 61 67 65 22 3A 22 7B 30 7D 22     APT_Backdoor_SUNBURST Type 1 String 8
67 19 D8 A7 3B 90 AC 5B     APT_Backdoor_SUNBURST Type 1 String 9


0y3Kzy8BAA== wide   APT_Backdoor_SUNBURST Type 2 String 1
S8vPKynWL89PS9OvNqjVrTYEYqNa3fLUpDSgTLVxrR5IzggA wide   APT_Backdoor_SUNBURST Type 2 String 2
S8vPKynWL89PS9OvNqjVrTYEYqPaauNaPZCYEQA= wide   APT_Backdoor_SUNBURST Type 2 String 3
C88sSs1JLS4GAA== wide   APT_Backdoor_SUNBURST Type 2 String 4
C/UEAA== wide   APT_Backdoor_SUNBURST Type 2 String 5
C89MSU8tKQYA wide   APT_Backdoor_SUNBURST Type 2 String 6
8wvwBQA= wide   APT_Backdoor_SUNBURST Type 2 String 7
cyzIz8nJBwA= wide   APT_Backdoor_SUNBURST Type 2 String 8
c87JL03xzc/LLMkvysxLBwA= wide   APT_Backdoor_SUNBURST Type 2 String 9
88tPSS0GAA== wide   APT_Backdoor_SUNBURST Type 2 String 10
C8vPKc1NLQYA wide   APT_Backdoor_SUNBURST Type 2 String 11
88wrSS1KS0xOLQYA wide   APT_Backdoor_SUNBURST Type 2 String 12
c87PLcjPS80rKQYA wide   APT_Backdoor_SUNBURST Type 2 String 13
Ky7PLNAvLUjRBwA= wide   APT_Backdoor_SUNBURST Type 2 String 14
06vIzQEA wide   APT_Backdoor_SUNBURST Type 2 String 15
0y3NyyxLLSpOzIlPTgQA wide   APT_Backdoor_SUNBURST Type 2 String 16
001OBAA= wide   APT_Backdoor_SUNBURST Type 2 String 17
0y0oysxNLKqMT04EAA== wide   APT_Backdoor_SUNBURST Type 2 String 18
0y3JzE0tLknMLQAA wide   APT_Backdoor_SUNBURST Type 2 String 19
003PyU9KzAEA wide   APT_Backdoor_SUNBURST Type 2 String 20
0y1OTS4tSk1OBAA= wide   APT_Backdoor_SUNBURST Type 2 String 21
K8jO1E8uytGvNqitNqytNqrVA/IA wide   APT_Backdoor_SUNBURST Type 2 String 22
c8rPSQEA wide   APT_Backdoor_SUNBURST Type 2 String 23
c8rPSfEsSczJTAYA wide   APT_Backdoor_SUNBURST Type 2 String 24
c60oKUp0ys9JAQA= wide   APT_Backdoor_SUNBURST Type 2 String 25
c60oKUp0ys9J8SxJzMlMBgA= wide   APT_Backdoor_SUNBURST Type 2 String 26
8yxJzMlMBgA= wide   APT_Backdoor_SUNBURST Type 2 String 27
88lMzygBAA== wide   APT_Backdoor_SUNBURST Type 2 String 28
88lMzyjxLEnMyUwGAA== wide   APT_Backdoor_SUNBURST Type 2 String 29
C0pNL81JLAIA wide   APT_Backdoor_SUNBURST Type 2 String 30
C07NzXTKz0kBAA== wide   APT_Backdoor_SUNBURST Type 2 String 31
C07NzXTKz0nxLEnMyUwGAA== wide   APT_Backdoor_SUNBURST Type 2 String 32
yy9IzStOzCsGAA== wide   APT_Backdoor_SUNBURST Type 2 String 33
y8svyQcA wide   APT_Backdoor_SUNBURST Type 2 String 34
SytKTU3LzysBAA== wide   APT_Backdoor_SUNBURST Type 2 String 35
C84vLUpOdc5PSQ0oygcA wide   APT_Backdoor_SUNBURST Type 2 String 36
C84vLUpODU4tykwLKMoHAA== wide   APT_Backdoor_SUNBURST Type 2 String 37
C84vLUpO9UjMC07MKwYA wide   APT_Backdoor_SUNBURST Type 2 String 38
C84vLUpO9UjMC04tykwDAA== wide   APT_Backdoor_SUNBURST Type 2 String 39


C7 44 24 ?? 80 00 00 00 [0-64] BA 00 00 00 80 [0-32] 48 8D 0D [4-32] FF 15 [4] 48 83 F8 FF [2-64] 41 B8 40 00 00 00 [0-64] FF 15 [4-5] 85 C0 7? ?? 80 3D [4] FF APT_Dropper_Raw64_TEARDROP String 1
80 3D [4] D8 [2-32] 41 B8 04 00 00 00 [0-32] C7 44 24 ?? 4A 46 49 46 [0-32] E8 [4-5] 85 C0 [2-32] C6 05 [4] 6A C6 05 [4] 70 C6 05 [4] 65 C6 05 [4] 67 APT_Dropper_Raw64_TEARDROP String 2
BA [4] 48 89 ?? E8 [4] 41 B8 [4] 48 89 ?? 48 89 ?? E8 [4] 85 C0 7? [1-32] 8B 44 24 ?? 48 8B ?? 24 [1-16] 48 01 C8 [0-32] FF D0 APT_Dropper_Raw64_TEARDROP String 3


48 89 C8 45 0F B6 4C 0A 30 APT_Dropper_Win64_TEARDROP String 1
48 C1 E0 04 83 C3 01 48 01 E8 8B 48 28 8B 50 30 44 8B 40 2C 48 01 F1 4C 01 FA APT_Dropper_Win64_TEARDROP String 2
C6 05 ?? ?? ?? ?? 6A C6 05 ?? ?? ?? ?? 70 C6 05 ?? ?? ?? ?? 65 C6 05 ?? ?? ?? ?? 67 APT_Dropper_Win64_TEARDROP String 3
48 89 C8 45 0F B6 4C 0A 30 48 89 CE 44 89 CF 48 F7 E3 48 C1 EA 05 48 8D 04 92 48 8D 04 42 48 C1 E0 04 48 29 C6 APT_Dropper_Win64_TEARDROP String 4
53 4F 46 54 57 41 52 45 ?? ?? ?? ?? 66 74 5C 43 ?? ?? ?? ?? 00 APT_Dropper_Win64_TEARDROP String 5
